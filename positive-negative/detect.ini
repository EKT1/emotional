
;;;;; Detect from live input ;;;;;

[componentInstances:cComponentManager]
	instance[dataMemory].type=cDataMemory
	instance[waveIn].type=cPortaudioSource
	instance[turn].type = cTurnDetector
	instance[detector].type=cLibsvmLiveSink
	instance[gui].type=cClassifierResultGUI
	printLevelStats=0
	nThreads=1
	execDebug=0

[waveIn:cPortaudioSource]
	writer.dmLevel=wave
	device = \cm[device(D){-1}:portaudio device number to record from]
	channels = 1
	sampleRate = 22050
	audioBuffersize_sec = 0.16
	 ; the buffersize of the pcm data ringbuffer (don't make this too small, or you might loose data, 
	 ;  if your system load is low to normal, this size also does not affect the latency. 
	 ;  Only during high load this buffersize is an upper limit for the latency.)
	buffersize_sec=2.0
	listDevices=\cm[listDevices{0}:list devices]

\{wave.ini}
\{prosody.ini}
\{functionals.ini}

[turn:cTurnDetector]
        reader.dmLevel = energy
        writer.dmLevel = isTurn
        writer.levelconf.noHang=1
        ;readVad=0
        messageRecp = functL1nz_EMO
        eventRecp = functL1nz_EMO
        ;statusRecp = userinfoSender
        idx = 0
        autoThreshold = 0
        threshold = 0.003
        ;nPre=10
        ;nPost=50
        ;debug=\cm[turndebug{4}:set this to 1 to see turn/speaking debug messages]
        ;maxTurnLength=4
        ;maxTurnLengthGrace=1

[detector:cLibsvmLiveSink]
	reader.dmLevel=func_EMO
	modelResultName = activity
	model=np-train.lsvm.model
	scale=np-train.lsvm.range 
	classes = classes.txt
	forceScale=1
	resultRecp=gui
	resultMessageName=activity
	printResult=1
	predictProbability=1
	multiModelMode = 0
	useThread=1
	loadModelBg=0
	batchMode = 0
	noVerify = 0

[gui:cClassifierResultGUI]
	classes =neg;neu;pos
	images =images/negative.jpg;images/neutral.jpg;images/positive.jpg
